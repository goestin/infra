# vim: set ts=2 sw=2 expandtab filetype=yaml
# 
# howto:
# copy _sample_.env to .env en modify according to taste.
# copy _sample_grafana.env to grafana.env en modify according to taste.
version: '2'
services:
  traefik:
    image: traefik:latest
    command: 
      - --web
    ports:
      - "80:80"
      - "443:443"
    expose:
      - "8080"
    networks:
      - dmzhttp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/null:/traefik.toml
      - ./traefik/traefik.toml:/etc/traefik/traefik.toml
      - ./traefik/acme:/etc/traefik/acme
    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik-dashboard"
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:traefik.${DNSDOMAIN}"

  influxdb:
    image: influxdb:latest
    networks:
      - databases
    expose:
      - "8086"
    volumes:
      - influxdb_db:/var/lib/influxdb

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - traefik
    env_file:
      - grafana.env
    networks:
      - dmzhttp
      - databases
    labels:
      - "traefik.enable=true"
      - "traefik.backend=grafana"
      - "traefik.frontend.rule=Host:grafana.${DNSDOMAIN}"
      - "traefik.docker.network=infra_dmzhttp"
    volumes:
      - grafana_etc:/etc/grafana
      - grafana_lib:/var/lib/grafana
      - grafana_log:/var/log/grafana

  iota2influxdb:
    depends_on:
      - influxdb
    image: goestin/iota2influxdb
    command: "--uri ${IOTA_URIS} --dbhost influxdb"
    networks:
      - databases

  nextcloud:
    depends_on:
      - traefik
    networks:
      - dmzhttp
    labels:
      - "traefik.enable=true"
      - "traefik.backend=nextcloud"
      - "traefik.frontend.rule=Host:nextcloud.${DNSDOMAIN}"
      - "traefik.docker.network=infra_dmzhttp"
    image: nextcloud
    ports:
      - 8080:80
    volumes:
      - nextcloud:/var/www/html




networks:
  dmzhttp:
    driver: bridge
  databases:
    driver: bridge


volumes:
  grafana_etc:
  grafana_lib:
  grafana_log:
  influxdb_db:
  nextcloud:
